# 1. 워크플로의 이름 지정
name: CI/CD

# 2. 워크플로가 시작될 조건 지정
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest # 3. 실행 환경 지정
    #4. 실행 스텝 지정
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 현재 시간 가져오기
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2 # 시간 플러그인
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 저장
      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV # 깃허브 워크플로 전체적으로 사용할 수 있는 환경변수 설정

      # 빈 스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20 #빈스토크 배포 플러그인
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # 깃허브 액션에서 가져오는 비밀값 (깃허브 액션에서 설정)
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 깃허브 액션에서 가져오는 비밀값 (깃허브 액션에서 설정)
          application_name: springboot-developer2 # aws 애플리케이션 이름
          environment_name: Springboot-developer2-env # aws 환경 이름
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2 # aws 서울
          deployment_package: ./build/libs/${{env.artifact}}